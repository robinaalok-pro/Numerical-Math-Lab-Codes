// Gauss Jacobi Method

#include<stdio.h>
#include<math.h>
#include<stdbool.h>
#define EPSILON 0.001

int n;
int flag;


float Sum(int i,float a[][n+1])
{
     float sum=0;
     for(int j=0;j<n;j++)
     {  
       if(i!=j)  
         sum+=a[i][j];
     }
     return sum;
} 


bool tocheck(float a[][n+1]) 
{
   for(int i=0;i<n;i++)
   {
       for(int j=0;j<n;j++)
       {

           if(fabs(a[i][i])>=Sum(i,a))
              break;
           else  
              return false;   

       }
   }
   return true;
}


void print(int iteration,float values[n]) 
{
  printf("Iteration %d ",iteration);  
  for(int i=0;i<n;i++)
   printf("value[%d]=%f ",i+1,values[i]);
  printf("\n");
  //printf("\n");
  //printf("the value of x,yand z is = %f,%f,%f " , values[0],values[1],values[2]);
  
}


void findValues(float a[][n+1],int maxIterations,float vold[n])
{
    int i,j,k,iteration;
    float sum=0;
    float vnew[n];
    for(iteration=1;iteration<maxIterations;iteration++)
    {
        for(i=0;i<n;i++)
        {
            sum=0;
            for(j=0;j<n;j++)
            {
                if(i!=j)
                sum+=a[i][j]*vold[j];
            }
            vnew[i]=(a[i][n] - sum)/a[i][i];
        }

        
        for(k=0;k<n;k++)
        {
            if(fabs(vold[k]-vnew[k])<EPSILON)
            {   
                continue;
                
            }
            else
            {
               flag=1;
               break;
            }

        } 
        if(flag==0)
        {
            print(iteration,vnew);  
            return ;
        }
        flag=0; 
       
       print(iteration,vnew); 
        
        for(k=0;k<n;k++)
             vold[k]=vnew[k];

    } 
    print(iteration,vnew) ; 

} 

 
int main()
{
    int i,j,k,x,y,maxIterations;
    float ratio;
    printf("Enter no of Unknowns\n");
    scanf("%d",&n);
    printf("Enter no. of iterations\n");
    scanf("%d",&maxIterations);
    float a[n][n+1];
    float values[n];

    printf("Enter the Augmented Matrix\n");
    for(int i=0;i<n;i++)
    {
     for(int j=0;j<n+1;j++)
        scanf("%f",&a[i][j]);
    }

   if(!tocheck(a))
   {
        printf("Gauss Jacobi Method can't be applied\n");
        return 0;
   }
   printf("Gauss Jacobi Method is applicable\n");
   for(int i=0;i<n;i++)
     values[i]=0;
   findValues(a,maxIterations,values);
  
  printf("the value of x,yand z is = %f,%f,%f " , values[0],values[1],values[2]);
   return 0;
}
